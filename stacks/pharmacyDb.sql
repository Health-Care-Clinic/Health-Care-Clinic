CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "Advertisements" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Title" text NULL,
    "Description" text NULL,
    CONSTRAINT "PK_Advertisements" PRIMARY KEY ("Id")
);

CREATE TABLE "ApiKeys" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Key" text NULL,
    "BaseUrl" text NULL,
    "Category" text NULL,
    CONSTRAINT "PK_ApiKeys" PRIMARY KEY ("Id")
);

CREATE TABLE "FeedbackReplies" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Text" text NULL,
    "SenderId" integer NOT NULL,
    "ReceiverId" integer NOT NULL,
    "TimeOfSending" timestamp without time zone NOT NULL,
    "FeedbackId" integer NOT NULL,
    CONSTRAINT "PK_FeedbackReplies" PRIMARY KEY ("Id")
);

CREATE TABLE "Feedbacks" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Text" text NULL,
    "SenderId" integer NOT NULL,
    "ReceiverId" integer NOT NULL,
    "TimeOfSending" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_Feedbacks" PRIMARY KEY ("Id")
);

CREATE TABLE "Medicines" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Quantity" integer NOT NULL,
    "Manufacturer" text NULL,
    "Usage" text NULL,
    "Weight" integer NOT NULL,
    "SideEffects" text NULL,
    "Reactions" text NULL,
    "CompatibileMedicine" text NULL,
    "Price" double precision NOT NULL,
    CONSTRAINT "PK_Medicines" PRIMARY KEY ("Id")
);

CREATE TABLE "Messages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Sender" text NULL,
    "MessageText" text NULL,
    "Receiver" text NULL,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("Id")
);

CREATE TABLE "TenderResponses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TenderId" integer NOT NULL,
    "PharmacyName" text NULL,
    "TotalPrice_Amount" double precision NULL,
    "Description" text NULL,
    "IsWinningBid" boolean NOT NULL,
    CONSTRAINT "PK_TenderResponses" PRIMARY KEY ("Id")
);

CREATE TABLE "Tenders" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "DateRange_Start" timestamp without time zone NULL,
    "DateRange_End" timestamp without time zone NULL,
    "Description" text NULL,
    CONSTRAINT "PK_Tenders" PRIMARY KEY ("Id")
);

CREATE TABLE "AdvertisementMedicine" (
    "AdvertisementId" integer NOT NULL,
    "MedicineId" integer NOT NULL,
    CONSTRAINT "PK_AdvertisementMedicine" PRIMARY KEY ("AdvertisementId", "MedicineId"),
    CONSTRAINT "FK_AdvertisementMedicine_Advertisements_AdvertisementId" FOREIGN KEY ("AdvertisementId") REFERENCES "Advertisements" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AdvertisementMedicine_Medicines_MedicineId" FOREIGN KEY ("MedicineId") REFERENCES "Medicines" ("Id") ON DELETE CASCADE
);

CREATE TABLE "TenderResponses_TenderItems" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TenderResponseId" integer NOT NULL,
    "Name" text NULL,
    "Quantity" integer NOT NULL,
    CONSTRAINT "PK_TenderResponses_TenderItems" PRIMARY KEY ("TenderResponseId", "Id"),
    CONSTRAINT "FK_TenderResponses_TenderItems_TenderResponses_TenderResponseId" FOREIGN KEY ("TenderResponseId") REFERENCES "TenderResponses" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Tenders_TenderItems" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TenderId" integer NOT NULL,
    "Name" text NULL,
    "Quantity" integer NOT NULL,
    CONSTRAINT "PK_Tenders_TenderItems" PRIMARY KEY ("TenderId", "Id"),
    CONSTRAINT "FK_Tenders_TenderItems_Tenders_TenderId" FOREIGN KEY ("TenderId") REFERENCES "Tenders" ("Id") ON DELETE CASCADE
);

INSERT INTO "Advertisements" ("Id", "Description", "Title")
VALUES (1, 'NIkada jeftiniji popust', 'Super ponuda');

INSERT INTO "Medicines" ("Id", "CompatibileMedicine", "Manufacturer", "Name", "Price", "Quantity", "Reactions", "SideEffects", "Usage", "Weight")
VALUES (1, 'Aspirin', 'Bayer', 'Brufen', 4.5, 400, 'Headache', 'Rash, Stomach pain', 'Pain relief', 400);
INSERT INTO "Medicines" ("Id", "CompatibileMedicine", "Manufacturer", "Name", "Price", "Quantity", "Reactions", "SideEffects", "Usage", "Weight")
VALUES (2, 'Aspirin', 'Bayer', 'Klacid', 5.0, 200, 'Headache, Swelling', 'Rash, Unconsciousness', 'Lung infections, Bronchitis', 500);
INSERT INTO "Medicines" ("Id", "CompatibileMedicine", "Manufacturer", "Name", "Price", "Quantity", "Reactions", "SideEffects", "Usage", "Weight")
VALUES (3, 'Aspirin', 'Galenika', 'Paracetamol', 5.25, 250, 'None', 'None', 'Toothache, Headache', 500);

CREATE INDEX "IX_AdvertisementMedicine_MedicineId" ON "AdvertisementMedicine" ("MedicineId");

SELECT setval(
    pg_get_serial_sequence('"Advertisements"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Advertisements") + 1,
        nextval(pg_get_serial_sequence('"Advertisements"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Medicines"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Medicines") + 1,
        nextval(pg_get_serial_sequence('"Medicines"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220111061950_first', '5.0.11');

COMMIT;

