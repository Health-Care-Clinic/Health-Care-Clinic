version: '3.2' 

services:

  proxy:
    build: 
      context: ./Proxy
      dockerfile: Dockerfile
    ports: 
      - "8081:8080"
    restart: always
    networks:
      - application
        
  patient-front:
    image: nenadbecanovic/patient-gateway:latest
    #image: patient
    #build:
    #  context: ../../
    #  dockerfile: stacks/build/patient-gateway/Dockerfile
    depends_on:
      - "hospital-api"
    ports:
      - "3200:8080"
    networks: 
      - application

  hospital-api:
    image: nenadbecanovic/hospital-api:latest
    #image: hospitalapi
    #build:
    #  context: ../
    #  dockerfile: ../stacks/build/hospital/Dockerfile
    depends_on:
      - "database"
    ports:
      - "5000:8080"
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_SCHEMA: hospitalDb
      DATABASE_USER: /run/secrets/db-user
      DATABASE_PASSWORD: /run/secrets/db-password
    secrets:
      - db-password
      - db-user
    networks:
      - application
      - hospital-database
  
  database: 
    image: postgres:latest
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - type: volume
        source: hospital-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./database.sql 
        target: /docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: /run/secrets/db-user
      POSTGRES_PASSWORD: /run/secrets/db-password
      POSTGRES_DB: "hospitalDb"
    secrets:
      - db-password
      - db-user
    networks:
      - hospital-database
volumes:
  hospital-data:

networks:
  application:
    driver: bridge
  hospital-database:
    driver: bridge

secrets:
  db-password:
   external: true
  db-user:
   external: true